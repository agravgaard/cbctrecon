variables:
    GIT_STRATEGY: clone
    CUDA_AVAILABLE: "NO"
    COVERAGE: "NO"


Ubuntu-gcc9-superbuild:
    stage: test
    tags:
      - linux
      - docker
      - gpu
    image: andreasga/cbctrecon:gcc-9-x86_64
    script:
      - export CC=/usr/bin/gcc-9
      - export CXX=/usr/bin/g++-9
      - ./ci/ci.sh

Ubuntu-gcc9-CUDA:
    stage: test
    tags:
      - linux
      - docker
      - cuda
      - gpu
    image: andreasga/cbctrecon:gcc-9-CUDA-x86_64
    variables:
      CUDA_AVAILABLE: "YES"
      COVERAGE: "YES"
    script:
      - export CC=/usr/bin/gcc-9
      - export CXX=/usr/bin/g++-9
      - ./ci/ci.sh

Ubuntu-gcc9-coverage-prebuild-deps:
    stage: test
    tags:
      - linux
      - docker
      - gpu
    image: andreasga/cbctrecon:gcc-9-x86_64-libDCMTK-ITK-RTK
    variables:
      COVERAGE: "YES"
    script:
      - export CC=/usr/bin/gcc-9
      - export CXX=/usr/bin/g++-9
      - ./ci/ci.sh


Ubuntu-clang11-prebuild-deps:
    stage: test
    tags:
      - linux
      - docker
      - gpu
    image: andreasga/cbctrecon:clang-11-x86_64-libDCMTK-ITK-RTK
    script:
      - export CC=/usr/local/bin/clang
      - export CXX=/usr/local/bin/clang++
      - ./ci/ci.sh

Ubuntu-clang11-ROCm:
    stage: test
    tags:
      - linux
      - docker
      - rocm
# Our ROCm docker exported gfx900 as the target arch, so:
      - vega
      - gpu
    image: andreasga/cbctrecon:clang-11-ROCm-x86_64
    script:
      - export CC=/opt/rocm/hip/bin/hipcc
      - export CXX=/opt/rocm/hip/bin/hipcc
      - ./ci/ci.sh
