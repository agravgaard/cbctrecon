set(PLM_SYSTEM_DCMTK YES CACHE STRING "" FORCE)
message(STATUS "test: ${DCMTK_BINARY_DIR}")
if(NOT USE_SYSTEM_DCMTK)
  set(DCMTK_DIR "${DCMTK_BINARY_DIR}/../" CACHE PATH "" FORCE)
endif()

set(PLM_SYSTEM_ITK YES CACHE STRING "" FORCE)
if(NOT USE_SYSTEM_ITK)
  set(ITK_DIR "${ITK_BINARY_DIR}" CACHE PATH "" FORCE)
endif()

set(PLM_CONFIG_ENABLE_SUPERBUILD OFF CACHE BOOL "" FORCE)
set(PLM_BUILD_TESTING ${BUILD_TESTING} CACHE BOOL "" FORCE)
set(PLM_CONFIG_DISABLE_REG23 ON CACHE BOOL "" FORCE)
set(PLM_CONFIG_CLANG_COMPLETE ON CACHE BOOL "" FORCE) # Just for my amusement

# OpenCL
if(OpenCL_FOUND)
  set(PLM_CONFIG_DISABLE_OPENCL OFF CACHE BOOL "" FORCE)
else(OpenCL_FOUND)
  set(PLM_CONFIG_DISABLE_OPENCL ON CACHE BOOL "" FORCE)
endif(OpenCL_FOUND)
set(OPENCL_INCLUDE_DIRS ${OpenCL_INCLUDE_DIR} CACHE PATH "" FORCE)
set(OPENCL_LIBRARIES ${OpenCL_LIBRARY} CACHE FILEPATH "" FORCE)

# OpenMP
message(STATUS "Found omp: ${OpenMP_CXX_FOUND}, flags: ${OpenMP_CXX_FLAGS}, libs: ${OpenMP_CXX_LIBRARIES}.")
set(PLM_CONFIG_ENABLE_OPENMP ${OpenMP_CXX_FOUND} CACHE BOOL "" FORCE)
set(OPENMP_FLAGS ${OpenMP_CXX_FLAGS} CACHE STRING "" FORCE)
set(OPENMP_LIBRARIES ${OpenMP_CXX_LIBRARIES} CACHE STRING "" FORCE)

# CUDA
if(USE_CUDA)
  set(PLM_CONFIG_DISABLE_CUDA OFF CACHE BOOL "" FORCE)
else()
  set(PLM_CONFIG_DISABLE_CUDA ON CACHE BOOL "" FORCE)
endif()
set(PLM_CUDA_ALL_DEVICES ON CACHE BOOL "" FORCE)
set(CUDA_SEPARABLE_COMPILATION OFF CACHE BOOL "" FORCE)
set(PLM_CONFIG_LEGACY_CUDA_DELAYLOAD OFF CACHE BOOL "" FORCE)

# FFTW
set(FFTW_DIR ${FFTW_INCLUDE_DIR} CACHE PATH "" FORCE)
