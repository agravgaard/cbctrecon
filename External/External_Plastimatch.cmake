if(NOT USE_ITK_DCMTK)
  set(PLM_SYSTEM_DCMTK
      YES
      CACHE STRING "" FORCE)
  message(STATUS "test: ${DCMTK_BINARY_DIR}")
  if(NOT USE_SYSTEM_DCMTK)
    set(DCMTK_DIR
        "${DCMTK_BINARY_DIR}/../"
        CACHE PATH "" FORCE)
  endif()
  set(PLM_CONFIG_ENABLE_SUPERBUILD
      OFF
      CACHE BOOL "" FORCE)
else()
  # We'll use ITKDCMTK this way
  find_package(ITK COMPONENTS ITKDCMTK)
  set(DCMTK_FOUND ON)
  set(PLM_SYSTEM_DCMTK
      PREFERRED
      CACHE STRING "" FORCE)
  set(PLM_CONFIG_ENABLE_DCMTK
      ON
      CACHE BOOL "" FORCE)
  # However, plm currently uses suberbuild to do so:
  set(PLM_CONFIG_ENABLE_SUPERBUILD
      OFF
      CACHE BOOL "" FORCE)
  set(DCMTK_LIBRARIES
      ${ITKDCMTK_LIBRARIES}
      CACHE STRING "" FORCE)
  set(DCMTK_INCLUDE_DIRS
      ${ITKDCMTK_INCLUDE_DIRS}
      CACHE PATH "" FORCE)
endif()

set(PLM_SYSTEM_ITK
    YES
    CACHE STRING "" FORCE)
if(NOT USE_SYSTEM_ITK)
  set(ITK_DIR
      "${ITK_BINARY_DIR}"
      CACHE PATH "" FORCE)
endif()

set(PLM_BUILD_TESTING
    ${BUILD_TESTING}
    CACHE BOOL "")
set(PLM_CONFIG_DISABLE_REG23
    ON
    CACHE BOOL "" FORCE)
set(PLM_CONFIG_CLANG_COMPLETE
    ON
    CACHE BOOL "" FORCE) # Just for my amusement

# OpenCL
if(OpenCL_FOUND)
  set(PLM_CONFIG_DISABLE_OPENCL
      OFF
      CACHE BOOL "" FORCE)
else(OpenCL_FOUND)
  set(PLM_CONFIG_DISABLE_OPENCL
      ON
      CACHE BOOL "" FORCE)
endif(OpenCL_FOUND)
set(OPENCL_INCLUDE_DIRS
    ${OpenCL_INCLUDE_DIR}
    CACHE PATH "" FORCE)
set(OPENCL_LIBRARIES
    ${OpenCL_LIBRARY}
    CACHE FILEPATH "" FORCE)

# OpenMP
message(
  STATUS
    "Found omp: ${OpenMP_CXX_FOUND}, flags: ${OpenMP_CXX_FLAGS}, libs: ${OpenMP_CXX_LIBRARIES}."
)
set(PLM_CONFIG_ENABLE_OPENMP
    ${OpenMP_CXX_FOUND}
    CACHE BOOL "" FORCE)
set(OPENMP_FLAGS
    ${OpenMP_CXX_FLAGS}
    CACHE STRING "" FORCE)
set(OPENMP_LIBRARIES
    ${OpenMP_CXX_LIBRARIES}
    CACHE STRING "" FORCE)

# CUDA if(USE_CUDA) set(PLM_CONFIG_ENABLE_CUDA ON CACHE BOOL "" FORCE)
# set(PLM_CUDA_ALL_DEVICES ON CACHE BOOL "" FORCE) set(CUDA_SEPARABLE_COMPILATION OFF
# CACHE BOOL "" FORCE) set(PLM_CONFIG_LEGACY_CUDA_DELAYLOAD OFF CACHE BOOL "" FORCE)
# else()
set(PLM_CONFIG_ENABLE_CUDA
    OFF
    CACHE BOOL "" FORCE)
# endif()

# FFTW
set(FFTW_DIR
    ${FFTW_INCLUDE_DIR}
    CACHE PATH "" FORCE)

# dlib
if(NOT USE_SYSTEM_DLIB)
  set(PLM_PREFER_SYSTEM_DLIB
      ON
      CACHE PATH "" FORCE)
  set(dlib_DIR
      ${DLIB_BINARY_DIR}
      CACHE PATH "" FORCE)
endif()
