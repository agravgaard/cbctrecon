diff --git a/CMakeLists.txt b/CMakeLists.txt
index 08e45cb..3f468b5 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -60,7 +60,7 @@ include (SuperbuildOptions)
 ##-----------------------------------------------------------------------------
 ##  Set C++ compiler standard
 ##-----------------------------------------------------------------------------
-sb_set(CMAKE_CXX_STANDARD 11)
+sb_set(CMAKE_CXX_STANDARD 17)
 sb_set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 ##-----------------------------------------------------------------------------
@@ -574,6 +574,7 @@ if (NOT ITK_FOUND AND NOT PLM_SYSTEM_ITK STREQUAL "YES")
 endif ()
 
 if (ITK_FOUND)
+  set (CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
   include (HandleITK)
   include (HandleVXL)
 endif ()
@@ -770,7 +771,7 @@ endif ()
 ##    avoid this (i.e. no good suggestions on CMake/CTest email list.
 ##    This is the purpose of the PATH_HACK code below.
 ##-----------------------------------------------------------------------------
-if (WIN32 AND NOT CYGWIN AND NOT MINGW)
+if (FALSE) # WIN32 AND NOT CYGWIN AND NOT MINGW)
   set (PLM_PLASTIMATCH_PATH
     ${PLM_BINARY_DIR}/Release)
   set (PLM_PLASTIMATCH_TESTING_PATH
diff --git a/cmake/FindDlib.cmake b/cmake/FindDlib.cmake
deleted file mode 100755
index ee108db..0000000
--- a/cmake/FindDlib.cmake
+++ /dev/null
@@ -1,57 +0,0 @@
-# - Find Dlib
-# Find the native Dlib includes and library
-#
-#  DLIB_INCLUDE_DIR - where to find zlib.h, etc.
-#  DLIB_LIBRARIES   - List of libraries when using zlib.
-#  DLIB_FOUND       - True if zlib found.
-
-if (NOT DLIB_DIR)
-  find_path (DLIB_DIR DLIBconfig.cmake
-    $ENV{DLIB_DIR}
-    DOC "The build directory, containing Dlibconfig.cmake")
-endif (NOT DLIB_DIR)
-
-if (DLIB_DIR)
-  if (EXISTS (${DLIB_DIR}/Dlibconfig.cmake))
-    include (${DLIB_DIR}/Dlibconfig.cmake)
-  endif ()
-endif (DLIB_DIR)
-
-if (DLIB_INCLUDE_DIR)
-  # Already in cache, be silent
-  set (Dlib_FIND_QUIETLY TRUE)
-endif (DLIB_INCLUDE_DIR)
-
-find_path (DLIB_INCLUDE_DIR "dlib/algs.h"
-  PATHS "${DLIB_DIR}")
-
-set (DLIB_NAMES dlib)
-find_library (DLIB_LIBRARY NAMES ${DLIB_NAMES})
-
-# handle the QUIETLY and REQUIRED arguments and set DLIB_FOUND to TRUE if 
-# all listed variables are TRUE
-include (FindPackageHandleStandardArgs)
-find_package_handle_standard_args (DLIB DEFAULT_MSG 
-  DLIB_LIBRARY 
-  DLIB_INCLUDE_DIR)
-
-# Dlib on debian is linked against lapack and blas
-if (DLIB_LIBRARY)
-    find_package (BLAS)
-    if (BLAS_FOUND)
-	find_package (LAPACK)
-    endif ()
-    if (LAPACK_FOUND)
-	list (APPEND DLIB_LIBRARY ${LAPACK_LIBRARIES})
-    else ()
-	set (DLIB_FOUND FALSE)
-    endif ()
-endif ()
-
-if (DLIB_FOUND)
-  set (DLIB_LIBRARIES ${DLIB_LIBRARY})
-else (DLIB_FOUND)
-  set (DLIB_LIBRARIES)
-endif (DLIB_FOUND)
-
-mark_as_advanced (DLIB_LIBRARY)
diff --git a/src/plastimatch/CMakeLists.txt b/src/plastimatch/CMakeLists.txt
index f8c9986..79138cd 100644
--- a/src/plastimatch/CMakeLists.txt
+++ b/src/plastimatch/CMakeLists.txt
@@ -76,11 +76,12 @@ if (PLM_PREFER_SYSTEM_DLIB)
   # could be worked around by setting dlib_BINARY_DIR.  However, modern
   # dlibConfig.cmake scripts do not have this problem.
   ##  set (dlib_BINARY_DIR 1)
-  find_package (dlib QUIET)
+  find_package (dlib REQUIRED)
 endif ()
 set (DLIB_HAVE_LIBRARY FALSE)
 if (dlib_FOUND)
-  set (DLIB_INCLUDE_DIR ${dlib_INCLUDE_DIR})
+  message(STATUS "DLIB FOUND !!!!!!!!!")
+  #set (DLIB_INCLUDE_DIR ${dlib_INCLUDE_DIRS})
   #set (DLIB_LIBRARIES ${dlib_LIBRARIES})
   set (DLIB_LIBRARIES dlib::dlib)
   set (DLIB_FOUND TRUE)
diff --git a/src/plastimatch/base/dcmtk_rtplan.cxx b/src/plastimatch/base/dcmtk_rtplan.cxx
index 11634af..04be579 100644
--- a/src/plastimatch/base/dcmtk_rtplan.cxx
+++ b/src/plastimatch/base/dcmtk_rtplan.cxx
@@ -352,7 +352,7 @@ Dcmtk_rt_study::rtplan_save (const char *dicom_dir)
         Rtplan_beam *beam = rtplan->beamlist[b];
         dcmtk_put (rbs_item, DCM_BeamMeterset, 
             beam->final_cumulative_meterset_weight);
-	dcmtk_put (rbs_item, DCM_BeamDoseSpecificationPoint, 
+	dcmtk_put (rbs_item, DcmTagKey(0x300a, 0x0082), // DCM_BeamDoseSpecificationPoint,
 	    beam->beam_dose_specification_point);
 	dcmtk_put (rbs_item, DCM_BeamDose,
 	    beam->beam_dose);
diff --git a/src/plastimatch/clp/CMakeLists.txt b/src/plastimatch/clp/CMakeLists.txt
index ca6520c..68d47d0 100644
--- a/src/plastimatch/clp/CMakeLists.txt
+++ b/src/plastimatch/clp/CMakeLists.txt
@@ -21,3 +21,7 @@ set (PLMCLP_LIBRARY_SRC
 #  ""
 #  "")
 add_library (plmclp STATIC ${PLMCLP_LIBRARY_SRC})
+
+target_link_libraries(plmclp
+  dlib::dlib
+  )
diff --git a/src/plastimatch/cuda/CMakeLists.txt b/src/plastimatch/cuda/CMakeLists.txt
index fd0ccba..60e2729 100644
--- a/src/plastimatch/cuda/CMakeLists.txt
+++ b/src/plastimatch/cuda/CMakeLists.txt
@@ -7,11 +7,11 @@ set_directory_properties (PROPERTIES INCLUDE_DIRECTORIES "")
 set_directory_properties (PROPERTIES COMPILE_DEFINITIONS "")
 
 include_directories (BEFORE ${PLM_BINARY_DIR})
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/base)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/cuda)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/register)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/sys)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/util)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/base)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/cuda)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/register)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/sys)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/util)
 include_directories (BEFORE ${CMAKE_CURRENT_SOURCE_DIR})
 include_directories (AFTER ${MSINTTYPES_INCLUDE_DIR})
 
diff --git a/src/plastimatch/dose/rt_spot_map.h b/src/plastimatch/dose/rt_spot_map.h
index 2051c64..6095cc7 100755
--- a/src/plastimatch/dose/rt_spot_map.h
+++ b/src/plastimatch/dose/rt_spot_map.h
@@ -7,6 +7,8 @@
 #include "plmdose_config.h"
 #include "smart_pointer.h"
 
+#include <string>
+
 class Rt_spot_map_private;
 
 class PLMDOSE_API Rt_spot {
diff --git a/src/plastimatch/reconstruct/cuda/CMakeLists.txt b/src/plastimatch/reconstruct/cuda/CMakeLists.txt
index b691fbf..a42a67f 100644
--- a/src/plastimatch/reconstruct/cuda/CMakeLists.txt
+++ b/src/plastimatch/reconstruct/cuda/CMakeLists.txt
@@ -7,11 +7,11 @@ set_directory_properties (PROPERTIES INCLUDE_DIRECTORIES "")
 set_directory_properties (PROPERTIES COMPILE_DEFINITIONS "")
 
 include_directories (BEFORE ${PLM_BINARY_DIR})
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/base)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/cuda)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/reconstruct)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/sys)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/util)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/base)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/cuda)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/reconstruct)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/sys)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/util)
 include_directories (BEFORE ${CMAKE_CURRENT_SOURCE_DIR})
 include_directories (AFTER ${DLIB_INCLUDE_DIR})
 include_directories (AFTER ${MSINTTYPES_INCLUDE_DIR})
@@ -40,7 +40,7 @@ if (CUDA_FOUND)
     # build CUDA as separate plmreconstructcuda shared library
     plm_add_gpu_plugin_library (plmreconstructcuda 
       "${PLMRECONSTRUCTCUDA_LIBRARY_SRC}")
-    target_link_libraries (plmreconstructcuda plmcuda ${CUDA_LIBRARIES})
+    target_link_libraries (plmreconstructcuda plmcuda ${CUDA_LIBRARIES} ${DLIB_LIBRARIES})
 
     # set dependencies that plmreconstruct library needs 
     if (WIN32 AND NOT CYGWIN AND NOT MINGW)
diff --git a/src/plastimatch/register/cuda/CMakeLists.txt b/src/plastimatch/register/cuda/CMakeLists.txt
index 65f15e7..0572d00 100644
--- a/src/plastimatch/register/cuda/CMakeLists.txt
+++ b/src/plastimatch/register/cuda/CMakeLists.txt
@@ -7,11 +7,11 @@ set_directory_properties (PROPERTIES INCLUDE_DIRECTORIES "")
 set_directory_properties (PROPERTIES COMPILE_DEFINITIONS "")
 
 include_directories (BEFORE ${PLM_BINARY_DIR})
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/base)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/cuda)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/register)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/sys)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/util)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/base)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/cuda)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/register)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/sys)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/util)
 include_directories (BEFORE ${CMAKE_CURRENT_SOURCE_DIR})
 include_directories (AFTER ${DLIB_INCLUDE_DIR})
 include_directories (AFTER ${MSINTTYPES_INCLUDE_DIR})
diff --git a/src/plastimatch/sys/smart_pointer.h b/src/plastimatch/sys/smart_pointer.h
index 73613e5..5f72791 100644
--- a/src/plastimatch/sys/smart_pointer.h
+++ b/src/plastimatch/sys/smart_pointer.h
@@ -12,10 +12,7 @@
 # define SMART_POINTER_SUPPORT(T)                         \
     typedef void* Pointer
 #else
-# if __cplusplus < 201103L
-#  include "dlib/smart_pointers.h"
-#  define plm_shared_ptr dlib::shared_ptr
-# elif SHARED_PTR_USE_MEMORY
+# if SHARED_PTR_USE_MEMORY
 #  include <memory>
 #  define plm_shared_ptr std::shared_ptr
 # elif TR1_SHARED_PTR_USE_TR1_MEMORY
diff --git a/src/plastimatch/util/cuda/CMakeLists.txt b/src/plastimatch/util/cuda/CMakeLists.txt
index 6472a88..de6aa2e 100644
--- a/src/plastimatch/util/cuda/CMakeLists.txt
+++ b/src/plastimatch/util/cuda/CMakeLists.txt
@@ -7,10 +7,10 @@ set_directory_properties (PROPERTIES INCLUDE_DIRECTORIES "")
 set_directory_properties (PROPERTIES COMPILE_DEFINITIONS "")
 
 include_directories (BEFORE ${PLM_BINARY_DIR})
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/base)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/cuda)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/sys)
-include_directories (BEFORE ${CMAKE_SOURCE_DIR}/src/plastimatch/util)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/base)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/cuda)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/sys)
+include_directories (BEFORE ${PLM_SOURCE_DIR}/src/plastimatch/util)
 include_directories (BEFORE ${CMAKE_CURRENT_SOURCE_DIR})
 include_directories (AFTER ${DLIB_INCLUDE_DIR})
 include_directories (AFTER ${MSINTTYPES_INCLUDE_DIR})
